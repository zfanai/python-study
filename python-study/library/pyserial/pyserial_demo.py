#encoding:gbk
import os
import serial
import time

class Debug(object):
    def trace(self, *msg):print 'trace:', msg
debug=Debug()

cmd_list=[[':0102020100FB\r\n'], [':0102020200FB\r\n', ':0102020400FB\r\n', ':0102020100FB\r\n'], [':0102020800FB\r\n', ':0102021000FB\r\n', ':0102020200FB\r\n', ':0102020400FB\r\n', ':0102020100FB\r\n'], [':0102022000FB\r\n', ':0102024000FB\r\n', ':0102020800FB\r\n', ':0102021000FB\r\n', ':0102020200FB\r\n', ':0102020400FB\r\n', ':0102020100FB\r\n'], [':0102028000FB\r\n', ':0102020001FB\r\n', ':0102022000FB\r\n', ':0102024000FB\r\n', ':0102020800FB\r\n', ':0102021000FB\r\n', ':0102020200FB\r\n', ':0102020400FB\r\n', ':0102020100FB\r\n'], [':0102020002FB\r\n', ':0102020004FB\r\n', ':0102028000FB\r\n', ':0102020001FB\r\n', ':0102022000FB\r\n', ':0102024000FB\r\n', ':0102020800FB\r\n', ':0102021000FB\r\n', ':0102020200FB\r\n', ':0102020400FB\r\n', ':0102020100FB\r\n'], [':0102020008FB\r\n', ':0102020002FB\r\n', ':0102020004FB\r\n', ':0102028000FB\r\n', ':0102020001FB\r\n', ':0102022000FB\r\n', ':0102024000FB\r\n', ':0102020800FB\r\n', ':0102021000FB\r\n', ':0102020200FB\r\n', ':0102020400FB\r\n', ':0102020100FB\r\n'], [':0102020008FB\r\n', ':0102020002FB\r\n', ':0102020004FB\r\n', ':0102028000FB\r\n', ':0102020001FB\r\n', ':0102022000FB\r\n', ':0102024000FB\r\n', ':0102020800FB\r\n', ':0102021000FB\r\n', ':0102020200FB\r\n', ':0102020400FB\r\n', ':0102020100FB\r\n'], [':0102020008FB\r\n', ':0102020002FB\r\n', ':0102020004FB\r\n', ':0102028000FB\r\n', ':0102020001FB\r\n', ':0102022000FB\r\n', ':0102024000FB\r\n', ':0102020800FB\r\n', ':0102021000FB\r\n', ':0102020200FB\r\n', ':0102020400FB\r\n', ':0102020100FB\r\n'], [':0102020008FB\r\n', ':0102020002FB\r\n', ':0102020004FB\r\n', ':0102028000FB\r\n', ':0102020001FB\r\n', ':0102022000FB\r\n', ':0102024000FB\r\n', ':0102020800FB\r\n', ':0102021000FB\r\n', ':0102020200FB\r\n', ':0102020400FB\r\n', ':0102020100FB\r\n'], [':0102020008FB\r\n', ':0102020002FB\r\n', ':0102020004FB\r\n', ':0102028000FB\r\n', ':0102020001FB\r\n', ':0102022000FB\r\n', ':0102024000FB\r\n', ':0102020800FB\r\n', ':0102021000FB\r\n', ':0102020200FB\r\n', ':0102020400FB\r\n', ':0102020100FB\r\n'], [':0102020008FB\r\n', ':0102020002FB\r\n', ':0102020004FB\r\n', ':0102028000FB\r\n', ':0102020001FB\r\n', ':0102022000FB\r\n', ':0102024000FB\r\n', ':0102020800FB\r\n', ':0102021000FB\r\n', ':0102020200FB\r\n', ':0102020400FB\r\n', ':0102020100FB\r\n'], [':0102020008FB\r\n', ':0102020002FB\r\n', ':0102020004FB\r\n', ':0102028000FB\r\n', ':0102020001FB\r\n', ':0102022000FB\r\n', ':0102024000FB\r\n', ':0102020800FB\r\n', ':0102021000FB\r\n', ':0102020200FB\r\n', ':0102020400FB\r\n', ':0102020100FB\r\n'], [':0102020008FB\r\n', ':0102020002FB\r\n', ':0102020004FB\r\n', ':0102028000FB\r\n', ':0102020001FB\r\n', ':0102022000FB\r\n', ':0102024000FB\r\n', ':0102020800FB\r\n', ':0102021000FB\r\n', ':0102020200FB\r\n', ':0102020400FB\r\n', ':0102020100FB\r\n'], [':0102020008FB\r\n', ':0102020002FB\r\n', ':0102020004FB\r\n', ':0102028000FB\r\n', ':0102020001FB\r\n', ':0102022000FB\r\n', ':0102024000FB\r\n', ':0102020800FB\r\n', ':0102021000FB\r\n', ':0102020200FB\r\n', ':0102020400FB\r\n', ':0102020100FB\r\n'], [':0102020008FB\r\n', ':0102020002FB\r\n', ':0102020004FB\r\n', ':0102028000FB\r\n', ':0102020001FB\r\n', ':0102022000FB\r\n', ':0102024000FB\r\n', ':0102020800FB\r\n', ':0102021000FB\r\n', ':0102020200FB\r\n', ':0102020400FB\r\n', ':0102020100FB\r\n'], [':0102020008FB\r\n', ':0102020002FB\r\n', ':0102020004FB\r\n', ':0102028000FB\r\n', ':0102020001FB\r\n', ':0102022000FB\r\n', ':0102024000FB\r\n', ':0102020800FB\r\n', ':0102021000FB\r\n', ':0102020200FB\r\n', ':0102020400FB\r\n', ':0102020100FB\r\n']]

stage_interval=10
action_interval=1
group_num=len(cmd_list)
group_num=16

def func1():
    ser=serial.Serial('COM4', 9600, 7, 'E', 1)
    #ser.write('ddddd')
    #ser.baudrate = 9600
    #ser.databits = 7
    #ser.open()
    
    for b in range(group_num):
        batch=cmd_list[b]
        for cmd in batch:
            print time.time(), cmd
            ser.write(cmd)
            time.sleep(action_interval)
        time.sleep(stage_interval)
    #ser.close()
    ser.close()

def func2():
    print len(cmd_list)
    
if __name__=='__main__':
    func1()